//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace NVIDIA.PhysX {

public partial class PxRigidActorExt {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PxRigidActorExt(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PxRigidActorExt obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PxRigidActorExt() {
    destroy();
  }

  public virtual void destroy() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NativePINVOKE.delete_PxRigidActorExt(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public static PxShape createExclusiveShape(PxRigidActor actor, PxGeometry geometry, PxMaterial material, PxShapeFlag shapeFlags) {
    global::System.IntPtr cPtr = NativePINVOKE.PxRigidActorExt_createExclusiveShape__SWIG_0(PxRigidActor.getCPtr(actor), PxGeometry.getCPtr(geometry), PxMaterial.getCPtr(material), (int)shapeFlags);
    PxShape ret = (cPtr == global::System.IntPtr.Zero) ? null : PxShape.getWrapper(cPtr, false);
    if (NativePINVOKE.SWIGPendingException.Pending) throw NativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PxShape createExclusiveShape(PxRigidActor actor, PxGeometry geometry, PxMaterial material) {
    global::System.IntPtr cPtr = NativePINVOKE.PxRigidActorExt_createExclusiveShape__SWIG_1(PxRigidActor.getCPtr(actor), PxGeometry.getCPtr(geometry), PxMaterial.getCPtr(material));
    PxShape ret = (cPtr == global::System.IntPtr.Zero) ? null : PxShape.getWrapper(cPtr, false);
    if (NativePINVOKE.SWIGPendingException.Pending) throw NativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PxShape createExclusiveShape(PxRigidActor actor, PxGeometry geometry, PxMaterial[] materials, ushort materialCount, PxShapeFlag shapeFlags) {
    global::System.IntPtr cPtr = NativePINVOKE.PxRigidActorExt_createExclusiveShape__SWIG_2(PxRigidActor.getCPtr(actor), PxGeometry.getCPtr(geometry), global::System.Array.ConvertAll(materials, x => PxMaterial.getCPtr(x).Handle /* Mono Bug Workaround */), materialCount, (int)shapeFlags);
    PxShape ret = (cPtr == global::System.IntPtr.Zero) ? null : PxShape.getWrapper(cPtr, false);
    if (NativePINVOKE.SWIGPendingException.Pending) throw NativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PxShape createExclusiveShape(PxRigidActor actor, PxGeometry geometry, PxMaterial[] materials, ushort materialCount) {
    global::System.IntPtr cPtr = NativePINVOKE.PxRigidActorExt_createExclusiveShape__SWIG_3(PxRigidActor.getCPtr(actor), PxGeometry.getCPtr(geometry), global::System.Array.ConvertAll(materials, x => PxMaterial.getCPtr(x).Handle /* Mono Bug Workaround */), materialCount);
    PxShape ret = (cPtr == global::System.IntPtr.Zero) ? null : PxShape.getWrapper(cPtr, false);
    if (NativePINVOKE.SWIGPendingException.Pending) throw NativePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
