//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace NVIDIA.PhysX {

public partial class VehicleCollisionFiltering : PxSimulationFilterCallback {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal VehicleCollisionFiltering(global::System.IntPtr cPtr, bool cMemoryOwn) : base(NativePINVOKE.VehicleCollisionFiltering_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(VehicleCollisionFiltering obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void destroy() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NativePINVOKE.delete_VehicleCollisionFiltering(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.destroy();
    }
  }

  public static VehicleCollisionFiltering instance {
    get {
      global::System.IntPtr cPtr = NativePINVOKE.VehicleCollisionFiltering_instance_get();
      VehicleCollisionFiltering ret = (cPtr == global::System.IntPtr.Zero) ? null : new VehicleCollisionFiltering(cPtr, false);
      if (NativePINVOKE.SWIGPendingException.Pending) throw NativePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public static PxSimulationFilterShader function {
        get { global::System.IntPtr ptr = NativePINVOKE.VehicleCollisionFiltering_function_get();
      if (NativePINVOKE.SWIGPendingException.Pending) throw NativePINVOKE.SWIGPendingException.Retrieve();
              //PxSimulationFilterShader ret = global::System.Runtime.InteropServices.Marshal.PtrToStructure<PxSimulationFilterShader>(ptr);
              PxSimulationFilterShader ret; unsafe { ret = *(PxSimulationFilterShader*)ptr; }
              return ret; }
    
  }

}

}
