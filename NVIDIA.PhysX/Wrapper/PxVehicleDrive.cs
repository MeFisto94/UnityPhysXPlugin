//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace NVIDIA.PhysX {

public partial class PxVehicleDrive : PxVehicleWheels {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal PxVehicleDrive(global::System.IntPtr cPtr, bool cMemoryOwn) : base(NativePINVOKE.PxVehicleDrive_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PxVehicleDrive obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static new PxVehicleDrive getWrapper(global::System.IntPtr cPtr, bool cMemoryOwn) {
      var wrapper = WrapperCache.find(cPtr);
      if (!(wrapper is PxVehicleDrive)) {
          wrapper = new PxVehicleDrive(cPtr, cMemoryOwn);
          WrapperCache.add(cPtr, wrapper);
      }
      return wrapper as PxVehicleDrive;
  }

  public PxVehicleDriveDynData mDriveDynData {
    set {
      NativePINVOKE.PxVehicleDrive_mDriveDynData_set(swigCPtr, PxVehicleDriveDynData.getCPtr(value));
      if (NativePINVOKE.SWIGPendingException.Pending) throw NativePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = NativePINVOKE.PxVehicleDrive_mDriveDynData_get(swigCPtr);
      PxVehicleDriveDynData ret = (cPtr == global::System.IntPtr.Zero) ? null : new PxVehicleDriveDynData(cPtr, false);
      if (NativePINVOKE.SWIGPendingException.Pending) throw NativePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}

}
